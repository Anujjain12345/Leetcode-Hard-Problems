class Solution {
public:
    #define ll long long
    int minSizeSubarray(vector<int>& v, int target) {
        ll n = v.size();
        long long sm = 0;
        for(int i=0;i<n;i++){
            ll d = v[i];
            sm += d;
        }
        ll g = target/sm;
        if(target%sm==0){
            return g*n;
        }
        ll rem = target%sm;
        for(int i=0;i<n;i++){
            v.push_back(v[i]);
        }
        int l=0,r=0;
        int ans = INT_MAX;
        ll sum=0;
        while(r<v.size()){
            sum += v[r];
            while(sum>rem){
                sum -= v[l];
                l++;
            }
            if(sum==rem){
                ans = min(ans , r-l+1);
            }
            r++;
        }
      //  cout<<g<<" ";
        if(ans==INT_MAX)return -1;
        else return ans + g*n;
    }
};
